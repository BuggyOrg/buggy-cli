digraph {
  subgraph smallest {
    inPort="['list1', 'list2']";
    outPort="[smallest, remainingList1, remainingList2]";
    juggy="smallest = min(list1[0], list2[0]); remainingList1 = branch(list1[0] > list2[0], list1, rest(list1)); remainingList2 = branch(list2[0] >= list1[0], list2, rest(list2))";
  }

  subgraph split {
    inPort=list;
    outPort="['split1', 'split2']";
    meta="mergesort/split";
    juggy="split1 = filter(list, index < length(list)/2); split2 = filter(list, index >= length(list)/2)";
  }

  subgraph merge {
    inPort="['list1', 'list2']";
    outPort=merged;
    meta="mergesort/merge";
    
    smallest[meta="mergesort/smallest"]
    merge[meta="mergesort/merge"]
    concat[meta="list/concat"]
  }

  subgraph mergesort {
    inPort=list;
    outPort=sortedList;
    meta="mergesort";
    
    mergesplit [meta="mergesort/split"]
    mergesort1 [meta="mergesort"]
    mergesort2 [meta="mergesort"]
    mergemerge [meta="mergesort/merge"]
  }

  mergesort -> mergesplit [from=list,to=list]
  mergesplit -> mergesort1 [from=split1,to=list]
  mergesplit -> mergesort2 [from=split2,to=list]
  mergesort1 -> merge [from=sortedList,to=list1]
  mergesort2 -> merge [from=sortedList,to=list2]
  merge -> mergesort [from=merged,to=sortedList]
}